{"version":3,"sources":["components/FileUpload.jsx","components/Login.jsx","App.jsx","index.js"],"names":["Component","styled","div","currentYear","Date","getFullYear","yearRange","Array","from","length","_","i","year","Option","key","value","FieldData","file","this","data","name","updateYear","bind","FileUpload","isLoading","onUpload","testData","useState","fileData","setFileData","className","UploadOutlined","id","multiple","onChange","e","fileList","target","files","find","f","push","concat","type","dataSource","renderItem","align","allowClear","DeleteTwoTone","onClick","filter","item","removeFile","disabled","LoadingOutlined","spin","style","color","Object","keys","Paragraph","Typography","Text","Title","LoginForm","Card","Login","errorMessage","onSubmit","bordered","direction","size","placement","title","onFinish","Item","Password","prefix","LockOutlined","htmlType","Header","Layout","Footer","Content","App","isAuthorized","authorize","error","setError","console","log","to","path","login","password","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76176c74.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Divider, List, Row, Select } from 'antd';\nimport { DeleteTwoTone, LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nconst Component = styled.div`\n    background-color: white;\n    width: 50%;\n\n    input {\n        display: none;\n    }\n\n    .year-select {\n        min-width: 25%;\n    }\n\n    .year-select * {\n        cursor: pointer;\n    }\n`;\n\nconst currentYear = new Date().getFullYear();\nconst yearRange = Array.from({ length: 50 }, (_, i) => {\n    const year = currentYear - i;\n    return (\n        <Select.Option key={year} value={year}>\n            {year}\n        </Select.Option>\n    )\n});\n\nclass FieldData {\n    constructor(file) {\n        this.data = file;\n        this.name = file.name;\n        this.updateYear = this.updateYear.bind(this);\n    }\n\n    updateYear(year) {\n        this.year = year;\n    }\n}\n\nfunction FileUpload({ isLoading, onUpload, testData }) {\n    const [data, setData] = useState();\n    const [loading, loadingStatus] = useState(false);\n  \n    /*\n    async function fileUpload(files) {\n        loadingStatus(true);\n        try {\n        const res = uploadFiles(files);\n        setData(res);\n        } catch(err) {\n        console.log(err);\n        setData({error: \"blah\"});\n        }\n    \n        \n    }\n    \n\n  useEffect(() => {\n    if (data) {\n      loadingStatus(false);\n    }\n  }, [data]);\n\n  const error = data && data.error;\n  */\n    const [fileData, setFileData] = useState([]);\n    const selectFiles = e => {\n        let fileList = [];\n        for (const file of e.target.files) {\n            const data = new FieldData(file);\n            if (!fileData.find(f => f === data)){\n                fileList.push(data);\n            }\n        }\n        setFileData(fileData.concat(fileList));\n    }\n    \n    const removeFile = file => {\n        setFileData(fileData.filter(item => item !== file));\n    }\n\n    const submit = () => onUpload(fileData);\n\n    return (\n        <Component>\n            \n            <label className=\"ant-btn\">\n                <UploadOutlined />\n                Select File(s)\n                <input id=\"file-upload\" multiple onChange={selectFiles} type=\"file\"/> \n            </label>\n            <List\n                dataSource={fileData}\n                renderItem={file =>\n                    <Row align=\"middle\">\n                        <p>{file.name}</p>\n                        <Select allowClear className=\"year-select\" onChange={file.updateYear} value={file.year}>\n                            {yearRange}\n                        </Select>\n                        <DeleteTwoTone onClick={() => removeFile(file)}/>\n                    </Row>\n                }\n            />\n            <Button disabled={!fileData.length} onClick={submit}>Upload</Button>\n            <br/>\n            <br/>\n            {isLoading && <LoadingOutlined spin style={{ color: 'black' }}/>}\n            {testData &&\n            (<List\n                dataSource={Object.keys(testData)}\n                renderItem={year =>\n                    <>\n                        <Divider>{year || \"None\"}</Divider>\n                        <List\n                            dataSource={testData[year]}\n                            renderItem={item => \n                                <p>{item}</p>\n                            }\n                        />\n                    </>\n                }\n                />)\n            }\n        </Component>\n    );\n}\n\nexport default FileUpload;","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Form, Input, Space, Tooltip, Typography } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nconst { Paragraph, Text, Title} = Typography;\n\nconst LoginForm = styled(Card)`\n    border-radius: 10px;\n    text-align: center;\n\n    .tooltip {\n        color: blue;\n        cursor: pointer;\n    }\n`;\n\nfunction Login({errorMessage, onSubmit}){\n    return (\n        <LoginForm bordered={false}>\n            <Space align=\"center\" direction=\"vertical\" size=\"middle\">\n                <Title>Welcome</Title>\n                <br/>\n                <Paragraph>\n                    This app was designed for\n                     <Tooltip placement=\"top\" title=\"me?\">\n                         <Text className=\"tooltip\"> Seth</Text>\n                         </Tooltip>.\n                    </Paragraph>\n                   <Text>If this isn't you, feel free to click away.</Text>\n                   <Text>If this isn't you, feel free to click away.</Text>\n                <Form onFinish={onSubmit}>\n                    <Form.Item name=\"password\">\n                        <Input.Password prefix={<LockOutlined/>}/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType=\"submit\">Enter</Button>\n                    </Form.Item>\n                </Form>\n                <Paragraph type=\"danger\">{errorMessage}</Paragraph>\n            </Space>\n            \n        </LoginForm>\n    )\n}\n\nexport default Login;\n\n","//import firebase from './firebase';\nimport React, { useState, useEffect } from 'react';\nimport FileUpload from './components/FileUpload';\nimport Login from './components/Login';\nimport \"antd/dist/antd.css\";\nimport \"./app.css\";\nimport { Layout, Button } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nconst { Header, Footer, Content } = Layout;\n\n\n\nfunction App() {\n  const [isAuthorized, authorize] = useState(false);\n  const [error, setError] = useState('');\n  const login = e => {\n    console.log(e.password);\n    if (e.password.length > 1) {\n      authorize(true);\n      setError();\n    } else {\n      setError({login: \"Could not validate\"});\n    }\n  }\n  const logout = () => {\n    authorize(false);\n  }\n  console.log(isAuthorized);\n  return (\n    <Router>\n      <Layout>\n        {isAuthorized &&\n        <Header>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/import\">Users</Link>\n          <Button onClick={logout}>Logout</Button>\n        </Header>\n        }\n        <Content className=\"container\">\n            <Switch>\n              <Route path=\"/import\">\n                <FileUpload />\n              </Route>\n              <Route path=\"/\">\n                {isAuthorized ? <div>Hello</div> : <Login errorMessage={error && error.login} onSubmit={login}/>}\n              </Route>\n            </Switch>\n        </Content>\n        <Footer>Hi</Footer>\n      </Layout>\n     \n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}